#json api
json.select.users.ranking.uci=select row_number() over (ORDER BY points desc,ac desc, usla asc, urd asc) as position,name as nick,email,ac,points as score,accp from (SELECT user_profile.fullname as name,user_profile.email as email,ac,points,user_stats.last_accepted as usla,users.registration_date as urd,case when (ac+wa+pe+ce+rte+tle+mle+ole) > 0 then (cast(ac as double precision)/(ac+wa+pe+ce+rte+tle+mle+ole))*100 else 0 end as accp from public.users join user_stats on user_stats.uid= public.users.uid join user_profile on user_profile.uid= users.uid where users.enabled= true and users.inst_id= 151 ORDER BY points desc,ac desc, user_stats.last_accepted asc, users.registration_date asc) as tbl	
json.user.top.ranking=SELECT users.uid as id, row_number() over (order by ac desc, points desc) as position,country.zip as country,nick,ac,points as score from public.users join country on public.users.country_id=country.country_id join user_stats on user_stats.uid= public.users.uid join user_profile on user_profile.uid= users.uid where users.enabled= true order by ac desc ,points desc limit 50
json.coming.running.contests=select cid as id ,name,initdate as startdate,enddate,private as access, case when initdate > now() then 'futuro' else 'presente' end as state from contest where enddate > now()
json.news=select title,content as text,date from news
json.problem=SELECT problem.pid,(ac+wa+pe+ce+rte+tle+mle+ole) AS submitions,ac,accu,case when (ac+wa+pe+ce+rte+tle+mle+ole) > 0 then (cast(ac as double precision)/(ac+wa+pe+ce+rte+tle+mle+ole))*100 else 0 end as accp,title as title_en,title_es,title_pt,description as description_en,description_es,description_pt,input as input_en,input_es,input_pt,output as output_en,output_es,output_pt,coments as coments_en,coments_es,coments_pt,input_example,output_example,problem_source.name || ' - ' || problem_source.author as author,time,memory,date,enable as enabled,special_judge FROM problem JOIN problem_stats using(pid) join problem_source on problem_source.id_source = problem.id_source WHERE problem.pid=?
json.problems=SELECT problem.pid as id,(ac+wa+pe+ce+rte+tle+mle+ole) AS submitions,ac,accu,case when (ac+wa+pe+ce+rte+tle+mle+ole) > 0 then (cast(ac as double precision)/(ac+wa+pe+ce+rte+tle+mle+ole))*100 else 0 end as accp,title as title_en,title_es,title_pt,description as description_en,description_es,description_pt,input as input_en,input_es,input_pt,output as output_en,output_es,output_pt,coments as coments_en,coments_es,coments_pt,input_example,output_example,problem_source.name || ' - ' || problem_source.author as author,time,memory,date,enable as enabled,special_judge FROM problem JOIN problem_stats using(pid) join problem_source on problem_source.id_source = problem.id_source WHERE problem.pid between ? and ?
json.problem.languages=SELECT language from problem_language join language using (lid)  where pid=?
#end json api
