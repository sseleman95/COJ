
#recomendador
recommender.notlogged=select * from (select problem.pid,title,(ac+wa+pe+ce+rte+tle+mle+ole) AS submitions,ac,accu,case when (ac+wa+pe+ce+rte+tle+mle+ole) > 0 then (cast(ac as double precision)/(ac+wa+pe+ce+rte+tle+mle+ole))*100 else 0 end as accp from problem join problem_stats on problem.pid = problem_stats.pid where enable= TRUE AND disable_24h= FALSE and problem.pid not in (select distinct pid from submition where username = ?) <AND> <orderby> limit ?) as t WHERE true limit ? OFFSET ?
recommender.notlogged.complexity=SELECT pid,title,submitions,ac,accu,accp FROM (select (SELECT CASE WHEN SUM(vote) is NULL THEN 0 ELSE SUM(vote) END  FROM votes WHERE "votes".pid = "problem".pid ) as "votos",problem.pid,title,(ac+wa+pe+ce+rte+tle+mle+ole) AS submitions,ac,accu,case when (ac+wa+pe+ce+rte+tle+mle+ole) > 0 then (cast(ac as double precision)/(ac+wa+pe+ce+rte+tle+mle+ole))*100 else 0 end as accp from problem join problem_stats on problem.pid = problem_stats.pid join problem_classification on problem.pid = problem_classification.pid where enable= TRUE AND disable_24h= FALSE AND complexity = ? ORDER BY "votos" DESC limit ?) as "tabla"

problem.voted.byuser=SELECT EXISTS (SELECT * FROM votes WHERE uid = ? AND pid = ?)
problem.register.vote=INSERT INTO votes(uid,pid,vote) VALUES (?,?,?)
problem.update.vote=UPDATE votes SET vote = ? WHERE uid = ? AND pid = ?

problem.has_voted=SELECT EXISTS (SELECT * FROM votes_stats WHERE pid = ?)
problem.load.votes=SELECT pid,vote1_cant,vote1_sum,vote2_cant,vote2_sum,vote3_cant,vote3_sum,vote4_cant,vote4_sum,vote5_cant,vote5_sum FROM votes_stats WHERE pid = ?
problem.create.votes=INSERT INTO votes_stats (pid) VALUES(?)
problem.update.votes=UPDATE votes_stats SET vote1_sum = vote1_sum + ?,vote1_cant = vote1_cant + ?, vote2_sum = vote2_sum + ?,vote2_cant = vote2_cant + ?,vote3_sum = vote3_sum + ?,vote3_cant = vote3_cant + ?, vote4_sum = vote4_sum + ?,vote4_cant = vote4_cant + ?, vote5_sum = vote5_sum + ?,vote5_cant = vote5_cant + ? WHERE pid = ?

recommender.filte.with.classification=SELECT * FROM (<SELECTION>) AS "A" WHERE pid IN (SELECT pid FROM problem INNER JOIN problem_classification USING (pid) WHERE position('-' || cast(id_classification as text) || '-' in ?) != 0)
recommender.filte.without.classification=SELECT * FROM (<SELECTION>) AS "A" WHERE pid IN (SELECT pid FROM problem INNER JOIN problem_classification USING (pid) WHERE position('-' || cast(id_classification as text) || '-' in ?) = 0)

recommender.solved.user=SELECT id_classification as idclassification,name,estimated_code_length as estimatedcodelength FROM classifications WHERE id_classification IN (SELECT id_classification as "idClassification" FROM (SELECT id_classification,count(DISTINCT problem.pid) as "cant" from problem JOIN "problem_classification" ON "problem".pid = "problem_classification".pid join problem_stats on problem.pid = problem_stats.pid join submition on submition.pid = problem.pid where status = 'Accepted' and username = ? and enable= TRUE AND disable_24h = FALSE GROUP BY id_classification) as "tabla" WHERE "cant" > ?) ORDER BY name

recommender.notloged.similar.problems=SELECT "tabla".pid FROM (SELECT DISTINCT "A".pid, (SELECT CASE WHEN SUM(vote) is NULL THEN 0 ELSE SUM(vote) END  FROM votes WHERE "votes".pid = "A".pid ) as "votos" FROM problem_classification as "A" JOIN (SELECT * FROM problem_classification WHERE pid = ?) as "B" ON (abs("A".complexity-"B".complexity) <= 2 AND "A".id_classification = "B".id_classification AND "A".pid != "B".pid) ORDER BY "votos" DESC) as "tabla" JOIN problem ON ("tabla".pid = problem.pid) WHERE "tabla".pid != ? AND enable= TRUE AND disable_24h= FALSE LIMIT ?
recommender.loged.similar.problems=SELECT "tabla".pid FROM (SELECT DISTINCT "A".pid, (SELECT CASE WHEN SUM(vote) is NULL THEN 0 ELSE SUM(vote) END  FROM votes WHERE "votes".pid = "A".pid ) as "votos" FROM problem_classification as "A" JOIN (SELECT * FROM problem_classification WHERE pid = ?) as "B" ON (abs("A".complexity-"B".complexity) <= 2 AND "A".id_classification = "B".id_classification AND "A".pid != "B".pid) ORDER BY "votos" DESC) as "tabla" JOIN problem ON ("tabla".pid = problem.pid AND enable= TRUE AND disable_24h= FALSE) WHERE "tabla".pid != ? AND "tabla".pid NOT IN ( SELECT pid FROM submition WHERE status = 'Accepted' and username=? ) LIMIT ?

recommender.is.preffered.for.user=SELECT EXISTS ( SELECT * FROM problem_classification WHERE pid = ? AND position('-' || cast(id_classification as text) || '-' in ?) != 0 LIMIT 1)
problem.complexity=SELECT CASE WHEN AVG(complexity) is NULL THEN 0 ELSE AVG(complexity) END FROM problem_classification WHERE pid = ?

recommender.loged.similar.problems.filtred=SELECT DISTINCT "tabla".pid FROM ( SELECT pid, abs((SELECT CASE WHEN AVG(complexity) is NULL THEN 0 ELSE AVG(complexity) END FROM problem_classification WHERE pid = "A".pid) - ?) as "distance" FROM problem_classification as "A" WHERE  position('-' || cast(id_classification || '-' as text) in ?) != 0  AND pid != ? AND pid NOT IN (SELECT pid FROM submition WHERE username=? AND status='Accepted') ORDER BY "distance") as "tabla" JOIN problem ON (problem.pid = "tabla".pid AND enable= TRUE AND disable_24h= FALSE) LIMIT ?

recommender.profile.update=UPDATE recommendation_profile SET recommendation = ? , date=now() WHERE uid=?
recommender.profile.insert=INSERT INTO recommendation_profile (uid,recommendation) VALUES (?, ?)
recommender.profile.hasprofile=SELECT EXISTS ( SELECT * FROM recommendation_profile as "A" WHERE uid = ? AND cast(now() as date) - cast("A".date as date) < 1 LIMIT 1)
recommender.profile.load=SELECT problem.pid,title,(ac+wa+pe+ce+rte+tle+mle+ole) AS submitions,ac,accu,case when (ac+wa+pe+ce+rte+tle+mle+ole) > 0 then (cast(ac as double precision)/(ac+wa+pe+ce+rte+tle+mle+ole))*100 else 0 end as accp  from problem join problem_stats on problem.pid = problem_stats.pid AND enable= TRUE AND disable_24h= FALSE WHERE position('-' || cast(problem.pid as text) || '-' in ?  ) != 0 <orderby>
recommender.profile.load.recommendation=SELECT recommendation FROM recommendation_profile WHERE uid = ?


recommender.preference.update=UPDATE preference_profile SET valorations = ? , date=now() WHERE uid=?
recommender.preference.insert=INSERT INTO preference_profile (uid,valorations) VALUES (?, ?)
recommender.preference.hasprofile=SELECT EXISTS ( SELECT * FROM preference_profile as "A" WHERE uid = ? AND cast(now() as date) - cast("A".date as date) < 1 LIMIT 1)
recommender.preference.load=SELECT valorations FROM preference_profile WHERE uid = ?


load.users.recommender.suggestedproblems.filtered.no.pattern=select * from (SELECT pid,title,submitions,ac,accu,accp FROM (SELECT (SELECT CASE WHEN SUM(vote) is NULL THEN 0 ELSE SUM(vote) END  FROM votes WHERE "votes".pid = "problem".pid ) as "votos",problem.pid,title,(ac+wa+pe+ce+rte+tle+mle+ole) AS submitions,ac,accu,case when (ac+wa+pe+ce+rte+tle+mle+ole) > 0 then (cast(ac as double precision)/(ac+wa+pe+ce+rte+tle+mle+ole))*100 else 0 end as accp from problem join problem_stats on problem.pid = problem_stats.pid join submition on submition.pid = problem.pid where status = 'Accepted' and problem.pid not in (select distinct pid from submition where username = ? and status='Accepted') and position(username in ?) != 0 and enable= TRUE AND disable_24h = FALSE group by problem.pid,ac,wa,pe,ce,rte,tle,fle,mle,ole,accu ORDER BY "votos" DESC ) as "tabla") as t WHERE true <and>  <orderby> OFFSET ?
order.all.problems.asc=ORDER BY <orderby> asc
order.all.problems.desc=ORDER BY <orderby> desc
load.users.recommender.loadtags=select tags from users where username=?
