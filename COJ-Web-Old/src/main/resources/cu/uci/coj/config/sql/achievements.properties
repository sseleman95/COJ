achievement.exists=select exists(select uid from user_achievement where uid = ? and aid = ?)
achievement.insert=insert into user_achievement(aid,uid) values(?,?)
achievements.all=select t.aid as id,t.* from achievements t order by aid
select.aid.language=select aid from language where language=?
achievement.update=update user_achievement set level=?, count=? where uid=? and aid=?


achievements.by.classification.uid=select distinct c.aid from submition s join problem_classification pc using (pid) join classifications c using (id_classification) where uid=?
achievements.by.classification.pid=select distinct c.aid from submition s join problem_classification pc using (pid) join classifications c using (id_classification) where pid=?
achievements.by.user=select t.aid as id,t.*,coalesce(ut.level,0) as level, coalesce(ut.count,0) as count from (select ut.* from user_achievement ut where ut.uid = ?) ut right outer join achievements t on ut.aid = t.aid where t.enabled = true order by t.aid
delete.achievement.uid=delete from user_achievement where uid = ?
check.classification.achievement=select count(distinct pid) from submition join problem_classification using (pid) where accepted and enabled and uid = ? and id_classification=(select id_classification from classifications where aid=?)
check.language.master.achievement=select count(distinct pid) from submition where accepted and enabled and uid = ? and language = ? 
check.sniper.achievement=select sum(first_ac) from (select min(submit_id),min(case when accepted then 1 else 0 end) as first_ac from submition where pid != 1000 and uid=? group by pid) tbl
check.polyglot.achievement=select max(langs) from (select pid,count(distinct language) as langs from submition where status='Accepted' and enabled=true and language!='Text' and pid!= 1000 and uid=? group by pid) tbl group by pid order by max(langs) desc limit 1
