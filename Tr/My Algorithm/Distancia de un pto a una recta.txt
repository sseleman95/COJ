    static double dot(double[] A, double[] B, double[] C) {
		double[] AB, BC;
		AB = new double[2];
		BC = new double[2];
		AB[0] = B[0] - A[0];
		AB[1] = B[1] - A[1];
		BC[0] = C[0] - B[0];
		BC[1] = C[1] - B[1];
		double dot = AB[0] * BC[0] + AB[1] * BC[1];
		return dot;
	}

	static double cross(double[] A, double[] B, double[] C) {
		double[] AB, AC;
		AB = new double[2];
		AC = new double[2];
		AB[0] = B[0] - A[0];
		AB[1] = B[1] - A[1];
		AC[0] = C[0] - A[0];
		AC[1] = C[1] - A[1];
		double cross = AB[0] * AC[1] - AB[1] * AC[0];
		return cross;
	}

	static double distance(double[] A, double[] B) {
		double d1 = A[0] - B[0];
		double d2 = A[1] - B[1];
		return Math.sqrt(d1 * d1 + d2 * d2);
	}

	static double linePointDist(double[] A, double[] B, double[] C, boolean isSegement) {
		double dist = cross(A, B, C) / distance(A, B);
		if (isSegement) {
			double dot1 = dot(A, B, C);
			if (dot1 > 0)
				return distance(B, C);
			double dot2 = dot(B, A, C);
			if (dot2 > 0)
				return distance(A, C);
		}
		return Math.abs(dist);
	}