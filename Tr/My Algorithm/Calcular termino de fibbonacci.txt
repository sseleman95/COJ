//Propiedades
-Sumatoria de F[1..n]=F[n+2]-1. 
- Si n es divisible por m entonces Fn es divisible por Fm
- Los nmeros consecutivos de Fibonacci son primos entre si.
- Si N es Fibonacci => (5*N*N + 4 || 5*N*N  4) es un cuadrado
- Suma de n terminos partiendo del k-simo + k = F[k+n+1]
- gcd(F[p], F[n]) = F[gcd(p,n)] = F[1] = 1
- Cantidad num fibonacci hasta n
  floor((log10(n)+ (log10(5)/2))/log10(1.6180));



import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {
	static long MOD = 1000000000;

	private static long fibo(long n) {
		long[][] fib = { { 1, 1 }, { 1, 0 } };
		long[][] ret = { { 1, 0 }, { 0, 1 } };
		long[][] tmp = { { 0, 0 }, { 0, 0 } };
		while (n > 0) {
			if (n % 2 == 1) {
				tmp[0][0] = 0;
				tmp[0][1] = 0;
				tmp[1][0] = 0;
				tmp[1][1] = 0;
				for (int i = 0; i < 2; i++)
					for (int j = 0; j < 2; j++)
						for (int k = 0; k < 2; k++)
							tmp[i][j] = (tmp[i][j] + ret[i][k] * fib[k][j])% MOD;
				for (int i = 0; i < 2; i++)
					for (int j = 0; j < 2; j++)
						ret[i][j] = tmp[i][j];
			}
			tmp[0][0] = 0;
			tmp[0][1] = 0;
			tmp[1][0] = 0;
			tmp[1][1] = 0;
			for (int i = 0; i < 2; i++)
				for (int j = 0; j < 2; j++)
					for (int k = 0; k < 2; k++)
						tmp[i][j] = (tmp[i][j] + fib[i][k] * fib[k][j]) % MOD;
			for (int i = 0; i < 2; i++)
				for (int j = 0; j < 2; j++)
					fib[i][j] = tmp[i][j];
			n /= 2;
		}
		return ret[0][1] % MOD;
	}

	public static void main(String[] args) throws java.lang.Exception {
		BufferedReader r = new BufferedReader(new InputStreamReader(System.in));
		int cases = Integer.parseInt(r.readLine());
		for (int i = 0; i < cases; i++) {
			long M = Long.parseLong(r.readLine());
			String res = (fibo(M) % MOD) + "";
			while(res.length() < 9)
				res = "0" + res;
			System.out.println(res);
		}
	}
}