#include <algorithm>
#include <numeric>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cassert>
#include <cmath>
#include <complex>
#include <memory.h>
#include <time.h>
#include <list>

using namespace std;
#define MAXLEN 10005

int rad[2 * MAXLEN];
char s[MAXLEN];

int main() {
//	freopen("f", "r", stdin);
	int cas, kk;
	scanf("%d%d", &cas, &kk);
	int min_val = 1000000000, max_val = -1;
	while (cas--) {
		int i, j, k, n;
		scanf("%s", s);
		n = strlen(s);
		for (i = 0, j = 0; i < 2 * n - 1; i += k) {
			while (i - j >= 0 && i + j + 1 < 2 * n
					&& s[(i - j) / 2] == s[(i + j + 1) / 2])
				j++;
			rad[i] = j;
			for (k = 1; k <= rad[i] && rad[i - k] != rad[i] - k; k++)
				rad[i + k] = min(rad[i - k], rad[i] - k);
			j = max(j - k, 0);
		}
		int cnt = 0;
		for (i = 0; i < n; ++i) {
			while (rad[2 * i] >= kk)
				cnt++, rad[2 * i] -= 2;
			while (rad[2 * i + 1] >= kk)
				cnt++, rad[2 * i + 1] -= 2;
		}
		if (min_val > cnt)
			min_val = cnt;
		if (max_val < cnt)
			max_val = cnt;
	}
	printf("%d %d\n", min_val, max_val);
	return 0;
}
