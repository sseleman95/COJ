#define MAXV 10000
#define MAXE 50000

struct edge {
  int v, next;
} edges[MAXE];

int V, E, k;
int u, v;

int p[MAXV], in_degree[MAXV];
int order[MAXV];

int main() {  
  memset( p, -1, sizeof( p ) );  
  scanf( "%d %d", &V, &E );
  for ( int i = 0; i < E; i++ ) {
    scanf( "%d %d", &u, &v );
    in_degree[v]++;
    edges[i] = ( edge ) { v, p[u] };
    p[u] = i;
  }  
  /* Topological Sorting */  
  queue< int > Q;  
  for ( int i = 0; i < V; i++ )
    if ( in_degree[i] == 0 ) Q.push( i );  
  k = 0;
  while ( !Q.empty() ) {  
    u = Q.front();
    Q.pop();
    order[ k++ ] = u;    
    for ( int i = p[u]; i != -1; i = edges[i].next ) {
      v = edges[i].v;
      in_degree[v]--;
      if ( in_degree[v] == 0 )
        Q.push( v );
    }
  }  
  if ( k != V ) printf( "The given graph isn't a DAG!\n" );
  else {
    printf( "Topological sort:\n" );
    for ( int i = 0; i < V; i++ )
      printf( "%d\n", order[i] );
  }
  return 0;
}