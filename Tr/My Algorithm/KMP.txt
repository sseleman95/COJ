#include <algorithm>
#include <numeric>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cassert>
#include <cmath>
#include <complex>
#include <memory.h>
#include <time.h>
#include <list>

using namespace std;
#define MAXL 50005

int N, k, cnt;
char c;

int Q[MAXL];
char pattern[MAXL];

int main() {
	scanf("%s", pattern);
	N = strlen(pattern);
	// Compute KMP automaton
	// (the so-called failure function)
	k = Q[0] = -1;
	for (int i = 1; i < N; i++) {
		while (k >= 0 && pattern[k + 1] != pattern[i])
			k = Q[k];
		if (pattern[k + 1] == pattern[i])
			k++;
		Q[i] = k;
	}
	// Find occurrences
	scanf("\n");
	k = -1;
	while ((c = getchar()) != EOF) {
		while (k >= 0 && pattern[k + 1] != c)
			k = Q[k];
		if (pattern[k + 1] == c)
			k++;
		cnt++;
		if (k + 1 == N) {
			printf("%d\n", cnt - N);
			k = Q[k];
		}
	}
	return 0;
}
