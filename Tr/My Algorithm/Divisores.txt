N=p^a*q^b*r^c //descomposicion de N
CantDiv = D = (a+1)*(b+1)*(c+1)
SumaDiv = FOR(i,k) 
sum*=(prim[i]^(cant[i]+1)-1)/(prim[i]-1)
ProdDiv = P = N^(D/2)=Sqrt(N^D)



void sieve(int N) {
	for (int i = 4; i < N; i += 2)
		p[i] = 2;
	for (int i = 3; i * i < N; i += 2)
		if (!p[i])
			for (int j = i * i; j < N; j += 2 * i)
				p[j] = i;
}

int fact(int n, int f[]) {
	int F = 0;
	while (p[n]) {
		f[F++] = p[n];
		n /= p[n];
	}
	f[F++] = n;
	return F;
}

		int f[10000];
		memset(f, 0, sizeof f);
		int F = fact(i, f);
		int a = 0, b;
		int cantD = 1;
		for (int j = 1; j <= F; ++j) {
			if (f[j] != f[j - 1]) {
				b = j - a;
				a = j;
				cantD *= (b + 1);
			}
		}