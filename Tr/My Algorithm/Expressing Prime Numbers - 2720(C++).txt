#include <algorithm>
#include <numeric>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cassert>
#include <cmath>
#include <complex>
#include <memory.h>
#include <time.h>
#include <list>

using namespace std;
const int MAXN = 5000;

int primes[MAXN], is_prime[MAXN];

inline void Erastotenes() {
	for (int i = 2; i < MAXN; ++i)
		primes[i] = is_prime[i] = i;
	for (int i = 2; i * i < MAXN; ++i)
		if (primes[i])
			for (int j = i * i; j < MAXN; j += i)
				primes[j] = is_prime[j] = 0;
	remove(primes, primes + MAXN, 0);
}

int main() {
//	freopen("f", "r", stdin);
	Erastotenes();
	int n, k;
	scanf("%d%d", &n, &k);
	for (int i = 0, next = 6; next <= n && k; ++i, next = primes[i] + primes[i + 1] + 1)
		if (is_prime[next])
			k--;
	if (k)
		puts("NO");
	else
		puts("YES");
}
