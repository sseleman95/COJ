//calcular x tal que a^x=b(mod m)
#define INF 1000000000
#define MOD 100000007
typedef long long ll;

int powmod(ll a, ll b, ll m) {
	ll res = 1;
	while (b > 0)
		if (b & 1)
			res = (res * a) % m, --b;
		else
			a = (a * a) % m, b >>= 1;
	return (int) res;
}

ll solve(ll a, ll b, ll m) {
	ll msq = (int) sqrt(m + .0) + 1;
	ll msq2 = m / msq + (m % msq ? 1 : 0);
	vector<pair<ll, ll> > vals(msq2);
	for (ll I = 1; I <= msq2; ++I)
		vals[I - 1] = make_pair(powmod(a, I * msq, m), I);
	sort(vals.begin(), vals.end());
	ll sol = INF;
	for (int I = 0; I <= msq; ++I) {
		int cur = powmod(a, I, m);
		cur = (cur * b) % m;
		vector<pair<ll, ll> >::iterator IT = lower_bound(vals.begin(), vals.end(), make_pair((ll)cur, (ll)0));
		if (IT != vals.end() && IT->first == cur) {
			sol = min(sol, IT->second * msq - I);
		}
	}
	return sol;
}