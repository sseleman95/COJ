void find_cycle(int v) {
	time_in[v] = 1;
	for (size_t i = 0; i < g[v].size(); ++i) {
		int to = g[v][i];
		if (!time_in[to]) {
			route[to] = v;
			find_cycle(to);
		} else if (time_in[to] == 1) {
			int cur = v;
			while (cur != to) {
				in_cycle[cur] = 1;
				cur = route[cur];
			}
			in_cycle[cur] = 1;
		}
	}
	time_in[v] = 2;
}